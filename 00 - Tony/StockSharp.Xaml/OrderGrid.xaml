<gridC:BaseGridControl
    x:Class="StockSharp.Xaml.OrderGrid"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cnvt="clr-namespace:Ecng.Xaml.Converters;assembly=Ecng.Xaml"
    xmlns:dxe="clr-namespace:DevExpress.Xpf.Editors;assembly=DevExpress.Xpf.Core.v20.1"
    xmlns:dxes="clr-namespace:DevExpress.Xpf.Editors.Settings;assembly=DevExpress.Xpf.Core.v20.1"
    xmlns:dxg="clr-namespace:DevExpress.Xpf.Grid;assembly=DevExpress.Xpf.Grid.v20.1"
    xmlns:dxgc="clr-namespace:DevExpress.Xpf.Grid;assembly=DevExpress.Xpf.Grid.v20.1.Core"
    xmlns:egXaml="clr-namespace:Ecng.Xaml;assembly=Ecng.Xaml"
    xmlns:gridC="clr-namespace:StockSharp.Xaml.GridControl"
    xmlns:loc="clr-namespace:StockSharp.Localization;assembly=StockSharp.Localization"
    xmlns:local="clr-namespace:StockSharp.Xaml"
    xmlns:msg="clr-namespace:StockSharp.Messages;assembly=StockSharp.Messages"
    xmlns:sXaml="clr-namespace:StockSharp.Xaml"
    xmlns:sysXaml="clr-namespace:System.Windows.Markup;assembly=System.Xaml"
    SelectionMode="Row">

    <FrameworkElement.Resources>
        <cnvt:FormattingConverter x:Key="ValueConverter" />
        <sXaml:OrderTimeInForceConverter x:Key="OrderTifConverter" />
        <cnvt:EnumDisplayNameConverter x:Key="EnumDisplayNameConverter" />
        <sXaml:OrderConditionConverter x:Key="OrderConditionConverter" />
        <cnvt:NullToVisibilityConvertor x:Key="NullToVisibilityConvertor" />
        <sXaml:MultiIdConverter x:Key="MultiIdConverter" />
        <sXaml:TradeSideBrushConverter x:Key="SideColorConverter" />
        <DataTemplate x:Key="SideColumnTemplate">
            <TextBlock Text="{Binding Path=RowData.Row.Direction, Converter={StaticResource EnumDisplayNameConverter}}" TextAlignment="Center">
                <TextBlock.Foreground>
                    <MultiBinding Converter="{StaticResource SideColorConverter}">
                        <Binding Path="RowData.Row.Direction" />
                        <Binding RelativeSource="{RelativeSource Mode=Self}" />
                    </MultiBinding>
                </TextBlock.Foreground>
            </TextBlock>
        </DataTemplate>
        <SolidColorBrush x:Key="Aqua" Color="Aqua" />
        <SolidColorBrush x:Key="MyBlue" Color="Blue" />
        <SolidColorBrush x:Key="Gray" Color="Gray" />
        <SolidColorBrush x:Key="SlateGray" Color="SlateGray" />
        <SolidColorBrush x:Key="HotPink" Color="HotPink" />
        <SolidColorBrush x:Key="Red" Color="Red" />
        <SolidColorBrush x:Key="GreenYellow" Color="GreenYellow" />
        <SolidColorBrush x:Key="Green" Color="Green" />
        <SolidColorBrush x:Key="White" Color="White" />
        <SolidColorBrush x:Key="Black" Color="Black" />
        <sXaml:OrderStateColorConverter
            x:Key="OrderStateColorConverter"
            ActiveBrushDark="{StaticResource Aqua}"
            ActiveBrushLight="{StaticResource MyBlue}"
            CancelBrushDark="{StaticResource Gray}"
            CancelBrushLight="{StaticResource SlateGray}"
            FailedBrushDark="{StaticResource HotPink}"
            FailedBrushLight="{StaticResource Red}"
            MatchedBrushDark="{StaticResource GreenYellow}"
            MatchedBrushLight="{StaticResource Green}"
            NoneBrushDark="{StaticResource White}"
            NoneBrushLight="{StaticResource Black}"
            PendingBrushDark="{StaticResource White}"
            PendingBrushLight="{StaticResource Black}" />
        <DataTemplate x:Key="StateColumnTemplate">
            <StackPanel>
                <TextBlock
                    x:Name="StateCtrl"
                    Text="{Binding Path=RowData.Row.OrderState, Converter={StaticResource EnumDisplayNameConverter}}"
                    TextAlignment="Center">
                    <TextBlock.Foreground>
                        <MultiBinding Converter="{StaticResource OrderStateColorConverter}">
                            <Binding Path="RowData.Row.OrderState" />
                            <Binding RelativeSource="{RelativeSource Mode=Self}" />
                        </MultiBinding>
                    </TextBlock.Foreground>
                </TextBlock>
                <egXaml:NonTopmostPopup
                    x:Name="PopupCtrl"
                    FrameworkElement.MaxHeight="700"
                    FrameworkElement.MaxWidth="450"
                    Popup.Placement="Bottom"
                    Popup.PlacementTarget="{Binding ElementName=StateCtrl}"
                    Popup.PopupAnimation="Fade"
                    UIElement.Focusable="false">
                    <Border>
                        <TextBlock>
                            <TextBox
                                x:Name="ErrorText"
                                BorderThickness="0"
                                HorizontalScrollBarVisibility="Auto"
                                IsReadOnly="true"
                                Text="{Binding Path=RowData.Row.CommentString}"
                                TextWrapping="Wrap"
                                VerticalScrollBarVisibility="Auto" />
                            <Hyperlink Command="{x:Static sXaml:OrderGrid.CopyErrorCommand}" CommandParameter="{Binding Path=RowData.Row.CommentString}">
                                <TextBlock Visibility="{Binding Path=RowData.Row.CommentString, Converter={StaticResource NullToVisibilityConvertor}}">
                                    <TextBlock Text="{x:Static loc:LocalizedStrings.XamlStr659}" />
                                </TextBlock>
                            </Hyperlink>
                        </TextBlock>
                    </Border>
                </egXaml:NonTopmostPopup>
            </StackPanel>
            <DataTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=RowData.Row.State}" Value="Failed" />
                        <Condition Binding="{Binding Path=IsMouseOver, ElementName=StateCtrl, Mode=OneWay}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="PopupCtrl" Property="Popup.IsOpen" Value="true" />
                    <TriggerBase.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames
                                    FillBehavior="HoldEnd"
                                    Storyboard.TargetName="PopupCtrl"
                                    Storyboard.TargetProperty="IsOpen">
                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0.25" Value="True" />
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </TriggerBase.EnterActions>
                    <TriggerBase.ExitActions>
                        <BeginStoryboard x:Name="ClosePopupStoryBoard">
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames
                                    FillBehavior="HoldEnd"
                                    Storyboard.TargetName="PopupCtrl"
                                    Storyboard.TargetProperty="IsOpen">
                                    <DiscreteBooleanKeyFrame KeyTime="0:0:1" Value="False" />
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </TriggerBase.ExitActions>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=ErrorText, Mode=OneWay}" Value="True">
                    <TriggerBase.EnterActions>
                        <PauseStoryboard BeginStoryboardName="ClosePopupStoryBoard" />
                    </TriggerBase.EnterActions>
                    <TriggerBase.ExitActions>
                        <ResumeStoryboard BeginStoryboardName="ClosePopupStoryBoard" />
                    </TriggerBase.ExitActions>
                    <Setter TargetName="PopupCtrl" Property="Popup.IsOpen" Value="true" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=RowData.Row.State}" Value="Failed">
                    <Setter TargetName="StateCtrl" Property="TextBlock.TextDecorations" Value="Underline" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate x:Key="ConditionColumnTemplate">
            <StackPanel>
                <TextBlock
                    x:Name="ConditionCtrl"
                    Text="{Binding Path=RowData.Row.ConditionString, Converter={StaticResource OrderConditionConverter}}"
                    TextAlignment="Center"
                    TextWrapping="NoWrap" />
                <egXaml:NonTopmostPopup
                    x:Name="PopupCtrl"
                    FrameworkElement.MaxHeight="700"
                    FrameworkElement.MaxWidth="450"
                    Popup.Placement="Bottom"
                    Popup.PlacementTarget="{Binding ElementName=ConditionCtrl}"
                    Popup.PopupAnimation="Fade"
                    UIElement.Focusable="false">
                    <Border Background="White">
                        <TextBox
                            x:Name="ConditionText"
                            HorizontalScrollBarVisibility="Auto"
                            IsReadOnly="true"
                            Text="{Binding Path=RowData.Row.ConditionString}"
                            TextWrapping="Wrap"
                            VerticalScrollBarVisibility="Auto" />
                    </Border>
                </egXaml:NonTopmostPopup>
            </StackPanel>
            <DataTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=RowData.Row.Type}" Value="Conditional" />
                        <Condition Binding="{Binding Path=IsMouseOver, ElementName=ConditionCtrl, Mode=OneWay}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="PopupCtrl" Property="Popup.IsOpen" Value="true" />
                    <TriggerBase.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames
                                    FillBehavior="HoldEnd"
                                    Storyboard.TargetName="PopupCtrl"
                                    Storyboard.TargetProperty="IsOpen">
                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0.25" Value="True" />
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </TriggerBase.EnterActions>
                    <TriggerBase.ExitActions>
                        <BeginStoryboard x:Name="ClosePopupStoryBoard">
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames
                                    FillBehavior="HoldEnd"
                                    Storyboard.TargetName="PopupCtrl"
                                    Storyboard.TargetProperty="IsOpen">
                                    <DiscreteBooleanKeyFrame KeyTime="0:0:1" Value="False" />
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </TriggerBase.ExitActions>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=ConditionText, Mode=OneWay}" Value="True">
                    <TriggerBase.EnterActions>
                        <PauseStoryboard BeginStoryboardName="ClosePopupStoryBoard" />
                    </TriggerBase.EnterActions>
                    <TriggerBase.ExitActions>
                        <ResumeStoryboard BeginStoryboardName="ClosePopupStoryBoard" />
                    </TriggerBase.ExitActions>
                    <Setter TargetName="PopupCtrl" Property="Popup.IsOpen" Value="true" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </FrameworkElement.Resources>

    <dxg:GridControl.View>
        <dxg:TableView
            AllowEditing="false"
            NavigationStyle="Row"
            ShowGroupPanel="false"
            ShowIndicator="false" />
    </dxg:GridControl.View>

    <dxg:GridControl.Columns>
        <dxg:GridColumn Width="100" Header="{x:Static loc:LocalizedStrings.Id}">
            <dxgc:ColumnBase.Binding>
                <MultiBinding Converter="{StaticResource MultiIdConverter}">
                    <Binding Path="Data.Id" />
                    <Binding Path="Data.StringId" />
                </MultiBinding>
            </dxgc:ColumnBase.Binding>
        </dxg:GridColumn>
        <dxg:GridColumn
            Width="100"
            FieldName="TransactionId"
            Header="{x:Static loc:LocalizedStrings.Transaction}" />
        <dxg:GridColumn
            Width="100"
            FieldName="BoardId"
            Header="{x:Static loc:LocalizedStrings.XamlStr365}"
            Visible="false" />
        <dxg:GridColumn
            Width="100"
            FieldName="UserOrderId"
            Header="{x:Static loc:LocalizedStrings.Str165}"
            Visible="false" />
        <dxg:GridColumn
            Width="120"
            FieldName="Time"
            Header="{x:Static loc:LocalizedStrings.Time}">
            <dxgc:ColumnBase.Binding>
                <egXaml:CultureAwareBinding
                    Binding.Converter="{StaticResource ValueConverter}"
                    Binding.ConverterParameter="{}{0:G}"
                    Binding.Path="Time" />
            </dxgc:ColumnBase.Binding>
        </dxg:GridColumn>
        <dxg:GridColumn
            Width="50"
            Binding="{Binding Path=Time, Converter={StaticResource ValueConverter}, ConverterParameter='{}{0:zzz}'}"
            FieldName="Time.Offset"
            Header="{x:Static loc:LocalizedStrings.TimeZone}"
            Visible="false" />
        <dxg:GridColumn
            Width="120"
            FieldName="Security.Id"
            Header="{x:Static loc:LocalizedStrings.Security}" />
        <dxg:GridColumn
            Width="120"
            FieldName="Portfolio.Name"
            Header="{x:Static loc:LocalizedStrings.Portfolio}" />
        <dxg:GridColumn
            Width="120"
            FieldName="ClientCode"
            Header="{x:Static loc:LocalizedStrings.ClientCode}"
            Visible="false" />
        <dxg:GridColumn
            Width="120"
            FieldName="BrokerCode"
            Header="{x:Static loc:LocalizedStrings.Broker}"
            Visible="false" />
        <dxg:GridColumn
            Width="50"
            FieldName="Volume"
            Header="{x:Static loc:LocalizedStrings.Volume}" />
        <dxg:GridColumn
            Width="50"
            FieldName="VisibleVolume"
            Header="{x:Static loc:LocalizedStrings.VisibleVolume}"
            Visible="false" />
        <dxg:GridColumn
            Width="40"
            FieldName="Currency"
            Header="{x:Static loc:LocalizedStrings.Currency}"
            Visible="false" />
        <dxg:GridColumn
            Width="50"
            FieldName="Balance"
            Header="{x:Static loc:LocalizedStrings.Str1325}" />
        <dxg:GridColumn
            Width="60"
            FieldName="Price"
            Header="{x:Static loc:LocalizedStrings.Price}" />
        <dxg:GridColumn
            Width="60"
            CellTemplate="{StaticResource SideColumnTemplate}"
            FieldName="Direction"
            Header="{x:Static loc:LocalizedStrings.Str128}">
            <dxgc:ColumnBase.EditSettings>
                <dxes:ComboBoxEditSettings HorizontalContentAlignment="Center" ItemsSource="{dxe:EnumItemsSource EnumType=msg:Sides}" />
            </dxgc:ColumnBase.EditSettings>
        </dxg:GridColumn>
        <dxg:GridColumn
            Width="40"
            FieldName="Type"
            Header="{x:Static loc:LocalizedStrings.Type}">
            <dxgc:ColumnBase.EditSettings>
                <dxes:ComboBoxEditSettings HorizontalContentAlignment="Center" ItemsSource="{dxe:EnumItemsSource EnumType=msg:OrderTypes}" />
            </dxgc:ColumnBase.EditSettings>
        </dxg:GridColumn>
        <dxg:GridColumn
            Width="60"
            CellTemplate="{StaticResource StateColumnTemplate}"
            FieldName="OrderState"
            Header="{x:Static loc:LocalizedStrings.Str1324}">
            <dxgc:ColumnBase.EditSettings>
                <dxes:ComboBoxEditSettings ItemsSource="{dxe:EnumItemsSource EnumType=msg:Sides}" />
            </dxgc:ColumnBase.EditSettings>
        </dxg:GridColumn>
        <dxg:GridColumn
            Width="60"
            FieldName="LocalTime"
            Header="{x:Static loc:LocalizedStrings.Str514}">
            <dxgc:ColumnBase.Binding>
                <egXaml:CultureAwareBinding
                    Binding.Converter="{StaticResource ValueConverter}"
                    Binding.ConverterParameter="{}{0:G}"
                    Binding.Path="LocalTime" />
            </dxgc:ColumnBase.Binding>
        </dxg:GridColumn>
        <dxg:GridColumn
            Width="60"
            Header="{x:Static loc:LocalizedStrings.TimeInForce}"
            Visible="false">
            <dxgc:ColumnBase.Binding>
                <MultiBinding Converter="{StaticResource OrderTifConverter}">
                    <Binding Path="Data.TimeInForce" />
                    <Binding Path="Data.ExpiryDate" />
                </MultiBinding>
            </dxgc:ColumnBase.Binding>
        </dxg:GridColumn>
        <dxg:GridColumn
            Width="120"
            FieldName="Comment"
            Header="{x:Static loc:LocalizedStrings.Str135}"
            Visible="false" />
        <dxg:GridColumn
            Width="60"
            CellTemplate="{StaticResource ConditionColumnTemplate}"
            Header="{x:Static loc:LocalizedStrings.Str154}"
            Visible="false" />
        <dxg:GridColumn
            Width="60"
            FieldName="LatencyRegistration"
            Header="{x:Static loc:LocalizedStrings.XamlStr169}"
            Visible="false" />
        <dxg:GridColumn
            Width="60"
            FieldName="LatencyCancellation"
            Header="{x:Static loc:LocalizedStrings.XamlStr168}"
            Visible="false" />
        <dxg:GridColumn
            Width="60"
            FieldName="Commission"
            Header="{x:Static loc:LocalizedStrings.Str159}"
            Visible="false" />
        <dxg:GridColumn
            Width="60"
            FieldName="IsMarketMaker"
            Header="{x:Static loc:LocalizedStrings.MarketMaker}"
            Visible="false" />
        <dxg:GridColumn
            Width="60"
            FieldName="IsMargin"
            Header="{x:Static loc:LocalizedStrings.Margin}"
            Visible="false" />
        <dxg:GridColumn
            Width="60"
            FieldName="Slippage"
            Header="{x:Static loc:LocalizedStrings.Str163}"
            Visible="false" />
    </dxg:GridControl.Columns>

</gridC:BaseGridControl>