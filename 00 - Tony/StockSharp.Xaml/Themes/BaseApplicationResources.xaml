<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:DevExpress.Xpf.Core.Native;assembly=DevExpress.Xpf.Core.v20.1"
    xmlns:dockve="clr-namespace:DevExpress.Xpf.Docking.VisualElements;assembly=DevExpress.Xpf.Docking.v20.1"
    xmlns:dx="clr-namespace:DevExpress.Xpf.Core;assembly=DevExpress.Xpf.Core.v20.1"
    xmlns:dxBind="clr-namespace:DevExpress.Xpf.DXBinding;assembly=DevExpress.Xpf.Core.v20.1"
    xmlns:dxGrid="clr-namespace:DevExpress.Xpf.Grid;assembly=DevExpress.Xpf.Grid.v20.1.Core"
    xmlns:dxe="clr-namespace:DevExpress.Xpf.Editors;assembly=DevExpress.Xpf.Core.v20.1"
    xmlns:dxg="clr-namespace:DevExpress.Xpf.Grid;assembly=DevExpress.Xpf.Grid.v20.1"
    xmlns:gridve="clr-namespace:DevExpress.Xpf.Grid.Themes;assembly=DevExpress.Xpf.Grid.v20.1"
    xmlns:loc="clr-namespace:StockSharp.Localization;assembly=StockSharp.Localization"
    xmlns:mvvm="clr-namespace:DevExpress.Mvvm.UI.Interactivity;assembly=DevExpress.Xpf.Core.v20.1"
    xmlns:myEvent="clr-namespace:DevExpress.Mvvm.UI;assembly=DevExpress.Xpf.Core.v20.1"
    xmlns:sx="clr-namespace:StockSharp.Xaml"
    xmlns:sxXaml="clr-namespace:StockSharp.Xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:sysXaml="clr-namespace:System.Windows.Markup;assembly=System.Xaml"
    xmlns:xaml="clr-namespace:Ecng.Xaml;assembly=Ecng.Xaml"
    xmlns:xpfUtil="clr-namespace:DevExpress.Xpf.Utils.Themes;assembly=DevExpress.Xpf.Core.v20.1">
    <DataTemplate x:Key="BusyContentTemplate">
        <StackPanel Width="250" Margin="4">
            <TextBlock
                HorizontalAlignment="Center"
                Foreground="Black"
                Text="{Binding}" />
            <dxe:ProgressBarEdit
                Height="20"
                Margin="4"
                ContentDisplayMode="None">
                <dxe:ProgressBarEdit.StyleSettings>
                    <dxe:ProgressBarMarqueeStyleSettings />
                </dxe:ProgressBarEdit.StyleSettings>
            </dxe:ProgressBarEdit>
        </StackPanel>
    </DataTemplate>
    <Style TargetType="{x:Type Button}">
        <Setter Property="ContentControl.ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl Content="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="{TemplateBinding Control.Background}">
                        <BulletDecorator.Bullet>
                            <StackPanel Orientation="Horizontal">
                                <Border
                                    x:Name="Border"
                                    Width="32"
                                    Height="20"
                                    BorderBrush="Gray"
                                    BorderThickness="1"
                                    CornerRadius="2"
                                    Cursor="Hand">
                                    <TextBlock
                                        Name="BooleanContent"
                                        Padding="0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontWeight="Bold"
                                        Text="Off" />
                                </Border>
                                <Label Margin="5,0,0,0" Content="{TemplateBinding ContentControl.Content}" />
                            </StackPanel>
                        </BulletDecorator.Bullet>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Trigger.Setters>
                                <Setter TargetName="BooleanContent" Property="TextBlock.Text" Value="On" />
                                <Setter TargetName="BooleanContent" Property="TextBlock.Foreground" Value="Black" />
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="False">
                            <Trigger.Setters>
                                <Setter TargetName="BooleanContent" Property="TextBlock.Text" Value="Off" />
                                <Setter TargetName="BooleanContent" Property="TextBlock.Foreground" Value="Gray" />
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="{x:Null}">
                            <Trigger.Setters>
                                <Setter TargetName="BooleanContent" Property="TextBlock.Text" Value="?" />
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="true">
                            <Trigger.Setters>
                                <Setter TargetName="Border" Property="UIElement.Effect">
                                    <Setter.Value>
                                        <DropShadowEffect ShadowDepth="0" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Border" Property="Border.Background">
                                    <Setter.Value>
                                        <LinearGradientBrush x:Name="LinearBrush" StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop x:Name="Offset1" Offset="0" Color="White" />
                                            <GradientStop x:Name="Offset2" Offset="1" Color="Gray" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Border" Property="Border.BorderBrush" Value="#FF242424" />
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CandleStyle" TargetType="{x:Type Button}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <BulletDecorator Background="{TemplateBinding Control.Background}">
                        <BulletDecorator.Bullet>
                            <StackPanel Orientation="Horizontal">
                                <Border
                                    x:Name="Border"
                                    Width="32"
                                    Height="20"
                                    BorderBrush="Gray"
                                    BorderThickness="1"
                                    CornerRadius="2"
                                    Cursor="Hand">
                                    <Label
                                        Name="BooleanContent"
                                        Padding="0"
                                        HorizontalContentAlignment="Center"
                                        VerticalContentAlignment="Center"
                                        Content="↓"
                                        FontWeight="Bold"
                                        Foreground="Black" />
                                </Border>
                                <Label Margin="5,0,0,0" Content="{TemplateBinding ContentControl.Content}" />
                            </StackPanel>
                        </BulletDecorator.Bullet>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="true">
                            <Trigger.Setters>
                                <Setter TargetName="Border" Property="UIElement.Effect">
                                    <Setter.Value>
                                        <DropShadowEffect ShadowDepth="0" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Border" Property="Border.Background">
                                    <Setter.Value>
                                        <LinearGradientBrush x:Name="LinearBrush" StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop x:Name="Offset1" Offset="0" Color="White" />
                                            <GradientStop x:Name="Offset2" Offset="1" Color="Gray" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Border" Property="Border.BorderBrush" Value="#FF242424" />
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="{gridve:ExtendedColumnChooserThemeKey ResourceKey=Template, IsThemeIndependent=true}">
        <Grid DataContext="{Binding Path=(dxg:ExtendedColumnChooserControl.ViewModel), RelativeSource={RelativeSource Self}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="5" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <sxXaml:SimpleButtonEx
                Grid.Row="2"
                Grid.Column="0"
                Value="true">
                <sxXaml:SimpleButtonEx.Columns>
                    <Binding Path="Columns" />
                </sxXaml:SimpleButtonEx.Columns>
                <Image
                    Width="16"
                    Height="16"
                    Source="{sxXaml:ThemedIcons Key=Check}" />
            </sxXaml:SimpleButtonEx>
            <sxXaml:SimpleButtonEx
                Grid.Row="2"
                Grid.Column="2"
                Value="false">
                <sxXaml:SimpleButtonEx.Columns>
                    <Binding Path="Columns" />
                </sxXaml:SimpleButtonEx.Columns>
                <Image
                    Width="16"
                    Height="16"
                    Source="{sxXaml:ThemedIcons Key=UnCheck}" />
            </sxXaml:SimpleButtonEx>
            <dxg:TreeListControl
                Grid.Row="0"
                Grid.ColumnSpan="3"
                ItemsSource="{Binding Path=Columns}"
                Style="{core:ThemeResource {gridve:ExtendedColumnChooserThemeKey ResourceKey=TreeListControlStyle}}">
                <dxg:TreeListControl.Columns>
                    <dxg:TreeListColumn
                        AllowSearchPanel="False"
                        FieldName="IsVisible"
                        Style="{core:ThemeResource {gridve:ExtendedColumnChooserThemeKey ResourceKey=CheckBoxColumnStyle}}" />
                    <dxg:TreeListColumn
                        Width="*"
                        AllowSearchPanel="False"
                        FieldName="Source"
                        Style="{core:ThemeResource {gridve:ExtendedColumnChooserThemeKey ResourceKey=ColumnStyle}}" />
                    <dxg:TreeListColumn
                        AllowSearchPanel="False"
                        FieldName="VisibleIndex"
                        SortOrder="Ascending"
                        Visible="false" />
                    <dxg:TreeListColumn
                        AllowSearchPanel="True"
                        FieldName="Header"
                        Visible="false" />
                </dxg:TreeListControl.Columns>
                <dxg:TreeListControl.View>
                    <dxg:ExtendedColumnChooserTreeListView
                        KeyFieldName="Source"
                        OriginalDataControl="{Binding DataControl}"
                        ParentFieldName="ParentBand"
                        SearchPanelNullText="{x:Static loc:LocalizedStrings.SearchColumns}"
                        Style="{core:ThemeResource {gridve:ExtendedColumnChooserThemeKey ResourceKey=TreeListViewStyle}}"
                        TreeColumnFieldName="Source">
                        <mvvm:Interaction.Behaviors>
                            <myEvent:EventToCommand
                                Command="{dxBind:DXCommand Execute=@s.AssociatedObject.UpdateRowsFixedState()}"
                                EventName="ColumnsFixedStateChanged"
                                SourceObject="{Binding}" />
                            <myEvent:EventToCommand
                                Command="{dxBind:DXCommand Execute='@s.AssociatedObject.UpdateNodeExpandState(@parameter.TargetBand, @parameter.Source)'}"
                                EventName="DropInEmptyBand"
                                PassEventArgsToCommand="True"
                                SourceObject="{Binding DragDropManager}" />
                        </mvvm:Interaction.Behaviors>
                        <dx:DragManager.DropTargetFactory>
                            <dxg:ExtendedColumnChooserDropTargetFactory />
                        </dx:DragManager.DropTargetFactory>
                    </dxg:ExtendedColumnChooserTreeListView>
                </dxg:TreeListControl.View>
            </dxg:TreeListControl>
        </Grid>
    </ControlTemplate>
    <sxXaml:HelpUrlToVisibilityConverter x:Key="HelpUrlToVisibilityConverter" />
    <Style TargetType="{x:Type dockve:PanelControlBoxControl}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dockve:PanelControlBoxControl}">
                    <StackPanel Width="Auto" Orientation="Horizontal">
                        <ContentPresenter
                            x:Name="PART_CustomContent"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                        <dockve:ControlBoxButtonPresenter
                            x:Name="PART_HelpButton"
                            Width="{TemplateBinding dockve:BaseControlBoxControl.ButtonWidth}"
                            Height="{TemplateBinding dockve:BaseControlBoxControl.ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Visibility="{Binding Path=DataContext.(xaml:Doc.Url), Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}, Converter={StaticResource HelpUrlToVisibilityConverter}}">
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <dx:SimpleButton
                                        Command="{x:Static sxXaml:BaseApplication.HelpCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}, Path=DataContext}"
                                        ToolTip="{x:Static loc:LocalizedStrings.Help}">
                                        <Control.Template>
                                            <ControlTemplate>
                                                <Image
                                                    Width="10"
                                                    Height="10"
                                                    Source="{sxXaml:ThemedIcons Key=Help3}" />
                                            </ControlTemplate>
                                        </Control.Template>
                                    </dx:SimpleButton>
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </dockve:ControlBoxButtonPresenter>
                        <dockve:ControlBoxButtonPresenter
                            x:Name="PART_MaximizeButton"
                            Width="{TemplateBinding dockve:BaseControlBoxControl.ButtonWidth}"
                            Height="{TemplateBinding dockve:BaseControlBoxControl.ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{Binding ContextCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            CommandParameter="Maximize"
                            ContentTemplate="{TemplateBinding dockve:PanelControlBoxControl.MaximizeButtonTemplate}"
                            Visibility="Collapsed" />
                        <dockve:ControlBoxButtonPresenter
                            x:Name="PART_RestoreButton"
                            Width="{TemplateBinding dockve:BaseControlBoxControl.ButtonWidth}"
                            Height="{TemplateBinding dockve:BaseControlBoxControl.ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{Binding ContextCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            CommandParameter="Restore"
                            ContentTemplate="{TemplateBinding dockve:PanelControlBoxControl.RestoreButtonTemplate}"
                            Visibility="Collapsed" />
                        <dockve:ControlBoxButtonPresenter
                            x:Name="PART_PinButton"
                            Width="{TemplateBinding dockve:BaseControlBoxControl.ButtonWidth}"
                            Height="{TemplateBinding dockve:BaseControlBoxControl.ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{Binding ContextCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            CommandParameter="Pin"
                            ContentTemplate="{TemplateBinding dockve:PanelControlBoxControl.PinButtonTemplate}"
                            Visibility="Collapsed" />
                        <dockve:ControlBoxButtonPresenter
                            x:Name="PART_CloseButton"
                            Width="{TemplateBinding dockve:BaseControlBoxControl.ButtonWidth}"
                            Height="{TemplateBinding dockve:BaseControlBoxControl.ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{Binding ContextCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            CommandParameter="Close"
                            ContentTemplate="{TemplateBinding dockve:BaseControlBoxControl.CloseButtonTemplate}"
                            Visibility="Collapsed" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type dockve:DocumentTabHeaderControlBoxControl}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dockve:DocumentTabHeaderControlBoxControl}">
                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter
                            x:Name="PART_CustomContent"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                        <dockve:ControlBoxButtonPresenter
                            x:Name="PART_HelpButton"
                            Width="{TemplateBinding dockve:BaseControlBoxControl.ButtonWidth}"
                            Height="{TemplateBinding dockve:BaseControlBoxControl.ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Visibility="{Binding Path=DataContext.(xaml:Doc.Url), Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}, Converter={StaticResource HelpUrlToVisibilityConverter}}">
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <dx:SimpleButton
                                        Command="{x:Static sxXaml:BaseApplication.HelpCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}, Path=DataContext}"
                                        ToolTip="{x:Static loc:LocalizedStrings.Help}">
                                        <Control.Template>
                                            <ControlTemplate>
                                                <Image
                                                    Width="10"
                                                    Height="10"
                                                    Source="{sxXaml:ThemedIcons Key=Help3}" />
                                            </ControlTemplate>
                                        </Control.Template>
                                    </dx:SimpleButton>
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </dockve:ControlBoxButtonPresenter>
                        <dockve:ControlBoxButtonPresenter
                            x:Name="PART_PinButton"
                            Width="{TemplateBinding dockve:BaseControlBoxControl.ButtonWidth}"
                            Height="{TemplateBinding dockve:BaseControlBoxControl.ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{Binding ContextCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            CommandParameter="Pin"
                            ContentTemplate="{TemplateBinding dockve:DocumentTabHeaderControlBoxControl.PinButtonTemplate}"
                            Visibility="Collapsed" />
                        <dockve:ControlBoxButtonPresenter
                            x:Name="PART_CloseButton"
                            Width="{TemplateBinding dockve:BaseControlBoxControl.ButtonWidth}"
                            Height="{TemplateBinding dockve:BaseControlBoxControl.ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{Binding ContextCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            CommandParameter="Close"
                            ContentTemplate="{TemplateBinding dockve:BaseControlBoxControl.CloseButtonTemplate}"
                            Visibility="Collapsed" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="dockve:BaseControlBoxControl.CloseButtonTemplate" Value="{x:Null}">
                            <Setter TargetName="PART_CloseButton" Property="UIElement.Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="{xpfUtil:FloatingContainerThemeKey ResourceKey=FloatingContainerCaptionTemplate, IsThemeIndependent=true}">
        <Grid x:Name="Root" Height="Auto">
            <dx:DXWindowSmartCenteringPanel Padding="{DynamicResource {xpfUtil:DXWindowThemeKey ResourceKey=FloatingContainerCaptionTextBlockMargin}}" HorizontalAlignment="Stretch">
                <TextBlock
                    x:Name="PART_Text"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    IsHitTestVisible="false"
                    Text="{Binding Path=(dx:FloatingContainer.FloatingContainer).Caption, RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                    TextTrimming="CharacterEllipsis" />
            </dx:DXWindowSmartCenteringPanel>
        </Grid>
    </DataTemplate>
    <ControlTemplate x:Key="{xpfUtil:DXWindowThemeKey ResourceKey=HeaderTemplate, IsThemeIndependent=true}" TargetType="{x:Type ContentControl}">
        <dx:DXWindowHeader
            x:Name="PART_Header"
            CornerRadius="0"
            Focusable="false">
            <Grid>
                <Thumb x:Name="PART_DragWidget" Template="{DynamicResource {xpfUtil:FloatingContainerThemeKey IsVisibleInBlend=true, ResourceKey=FloatingContainerDragWidgetTemplate}}" />
                <DockPanel
                    Name="PART_HeaderDock"
                    Margin="{DynamicResource {xpfUtil:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderDockMargin}}"
                    LastChildFill="true">
                    <Image
                        x:Name="PART_Icon"
                        DockPanel.Dock="Left"
                        Source="{Binding Path=(dx:FloatingContainer.FloatingContainer).Icon, RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                        Style="{DynamicResource {xpfUtil:FloatingContainerThemeKey ResourceKey=DXWindowIconStyle}}" />
                    <Grid
                        x:Name="PART_Grid"
                        DockPanel.Dock="Right"
                        Focusable="false"
                        UseLayoutRounding="true">
                        <ItemsControl Style="{DynamicResource {xpfUtil:DXTabbedWindowThemeKey ResourceKey=ButtonContainerStyle}}" Visibility="Hidden">
                            <dx:HeaderItemControl DockPanel.Dock="Right" Style="{DynamicResource {xpfUtil:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderCloseButtonStyle}}" />
                        </ItemsControl>
                        <ItemsControl
                            x:Name="PART_HeaderButtons"
                            Focusable="false"
                            IsTabStop="false"
                            Style="{DynamicResource {xpfUtil:DXTabbedWindowThemeKey ResourceKey=ButtonContainerStyle}}">
                            <dx:HeaderItemControl
                                x:Name="PART_CloseButton"
                                DockPanel.Dock="Right"
                                Style="{DynamicResource {xpfUtil:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderCloseButtonStyle}}"
                                Visibility="Collapsed" />
                            <dx:HeaderItemControl
                                x:Name="PART_Maximize"
                                DockPanel.Dock="Right"
                                Style="{DynamicResource {xpfUtil:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}}"
                                Visibility="{Binding Path=(dx:FloatingContainer.IsMaximized), Converter={dx:BooleanToVisibilityConverter Invert=true}, RelativeSource={RelativeSource Self}}" />
                            <dx:HeaderItemControl
                                x:Name="PART_Restore"
                                DockPanel.Dock="Right"
                                Style="{DynamicResource {xpfUtil:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}}"
                                Visibility="{Binding Path=(dx:FloatingContainer.IsMaximized), Converter={dx:BooleanToVisibilityConverter Invert=false}, RelativeSource={RelativeSource Self}}" />
                            <dx:HeaderItemControl
                                x:Name="PART_Minimize"
                                DockPanel.Dock="Right"
                                Style="{DynamicResource {xpfUtil:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}}" />
                            <dx:HeaderItemControl
                                x:Name="PART_HelpButton"
                                Width="26"
                                Height="20"
                                Command="{x:Static sxXaml:BaseApplication.HelpCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dx:DXWindow}}}"
                                DockPanel.Dock="Right"
                                Focusable="false"
                                ToolTip="{x:Static loc:LocalizedStrings.Help}"
                                Visibility="{Binding Path=(xaml:Doc.Url), Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dx:DXWindow}}, Converter={StaticResource HelpUrlToVisibilityConverter}}">
                                <Image
                                    Width="15"
                                    Height="15"
                                    Source="{sxXaml:ThemedIcons Key=Help3}" />
                            </dx:HeaderItemControl>
                            <dx:ThemedWindowHeaderItemsControl
                                x:Name="PART_HeaderCustomItems"
                                Margin="{DynamicResource {xpfUtil:FloatingContainerThemeKey ResourceKey=HeaderItemsControlMargin}}"
                                DockPanel.Dock="Right"
                                Focusable="false"
                                Style="{DynamicResource {xpfUtil:DXTabbedWindowThemeKey ResourceKey=ControlContainerStyle}}" />
                        </ItemsControl>
                    </Grid>
                    <ContentPresenter
                        x:Name="PART_CaptionContentPresenter"
                        Content="{x:Null}"
                        ContentTemplate="{DynamicResource {xpfUtil:FloatingContainerThemeKey IsVisibleInBlend=true,
                                                                                             ResourceKey=FloatingContainerCaptionTemplate}}"
                        DockPanel.Dock="Left" />
                </DockPanel>
            </Grid>
        </dx:DXWindowHeader>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=WindowStyle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, FallbackValue={x:Static sys:String.Empty}}" Value="None">
                <Setter TargetName="PART_Maximize" Property="UIElement.Visibility" Value="Collapsed" />
                <Setter TargetName="PART_Restore" Property="UIElement.Visibility" Value="Collapsed" />
                <Setter TargetName="PART_Minimize" Property="UIElement.Visibility" Value="Collapsed" />
                <Setter TargetName="PART_HeaderCustomItems" Property="UIElement.Visibility" Value="Collapsed" />
            </DataTrigger>
            <Trigger SourceName="PART_Icon" Property="Image.Source" Value="{x:Null}">
                <Setter TargetName="PART_Icon" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>